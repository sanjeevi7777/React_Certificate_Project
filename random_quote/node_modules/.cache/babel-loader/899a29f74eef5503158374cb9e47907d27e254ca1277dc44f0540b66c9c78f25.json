{"ast":null,"code":"var _jsxFileName = \"/home/sanjeevi/Downloads/random_quote/src/components/Quotes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { TiSocialTwitter } from 'react-icons/ti';\nimport { CgTwitter } from 'react-icons/cg';\nimport { FaQuoteLeft } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quotes = () => {\n  _s();\n  const [quote, setQuote] = useState('title');\n  const [author, setAuthor] = useState('');\n  useEffect(() => {\n    getQuotes();\n  }, []);\n  const getQuotes = () => {\n    let url = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json';\n    fetch(url).then(res => res.json()).then(data => {\n      let dataQuotes = data.quotes;\n      let random = Math.floor(Math.random() * dataQuotes.length);\n      let randomQuote = dataQuotes[random];\n      setQuote(randomQuote.quote);\n      setAuthor(randomQuote.author);\n    });\n  };\n  const handleClick = () => {\n    getQuotes();\n    const randomColors = '#' + Math.random().toString(16).slice(2, 8);\n    setChangeColor(randomColors);\n  };\n  const [changeColor, setChangeColor] = useState('#256894');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main\",\n    style: {\n      backgroundColor: `${changeColor}`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote-box\",\n      style: {\n        backgroundColor: 'lightgrey'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"text\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FaQuoteLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \" \"\n          }, void 0, false), quote]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"author\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"-\", author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"social\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          id: \"new-quote\",\n          children: \"New Quotes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Quotes, \"lGVmn0RzR2sDaMfZiH9zUvEATVA=\");\n_c = Quotes;\nexport default Quotes;\nvar _c;\n$RefreshReg$(_c, \"Quotes\");","map":{"version":3,"names":["React","useState","useEffect","TiSocialTwitter","CgTwitter","FaQuoteLeft","jsxDEV","_jsxDEV","Fragment","_Fragment","Quotes","_s","quote","setQuote","author","setAuthor","getQuotes","url","fetch","then","res","json","data","dataQuotes","quotes","random","Math","floor","length","randomQuote","handleClick","randomColors","toString","slice","setChangeColor","changeColor","id","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/home/sanjeevi/Downloads/random_quote/src/components/Quotes.js"],"sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport {TiSocialTwitter} from 'react-icons/ti'\r\nimport {CgTwitter} from 'react-icons/cg'\r\nimport {FaQuoteLeft} from 'react-icons/fa'\r\nconst Quotes = () => {\r\n    const[quote,setQuote]= useState('title');\r\n    const[author,setAuthor]= useState('');\r\n    useEffect(()=>{\r\n      getQuotes()\r\n    },[]);\r\n    const getQuotes=()=>{\r\n        let url ='https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json'\r\n        fetch(url)\r\n          .then(res=>res.json())\r\n          .then(data=>{\r\n            let dataQuotes=data.quotes;\r\n            let random=Math.floor(Math.random()*dataQuotes.length);\r\n            let randomQuote=dataQuotes[random];\r\n            setQuote(randomQuote.quote);\r\n            setAuthor(randomQuote.author);\r\n          })\r\n    }\r\n    const handleClick=()=>{\r\n       getQuotes();\r\n       const randomColors =  '#' + Math.random().toString(16).slice(2,8)\r\n        setChangeColor(randomColors)\r\n    }\r\n    const [changeColor, setChangeColor] =useState('#256894')\r\n    return(\r\n    <div id=\"main\" style={{backgroundColor:`${changeColor}`}}>\r\n     <div id=\"quote-box\"style={{backgroundColor:'lightgrey'}}>\r\n        <div id=\"text\">\r\n           <p>\r\n            <FaQuoteLeft/><> </>\r\n            {quote}\r\n           </p>\r\n        </div>\r\n        <div id=\"author\">\r\n           <p>- \r\n            {author}\r\n           </p>\r\n        </div>\r\n        <div id=\"buttons\" >\r\n            <div className=\"social\">\r\n                {/* <a href={`https://twitter.com/intent/tweet?text=${quote}`} id=\"tweet\" target={\"_blank\"} >\r\n                    <button id=\"media\" style={{backgroundColor:`${changeColor}`}}><TiSocialTwitter size=\"small\"/></button>\r\n                </a>\r\n                <a href=\"https://www.tumblr.com/\" id=\"tumble\">\r\n                    <button id=\"medias\" style={{backgroundColor:`${changeColor}`}}><CgTwitter size=\"small\"/></button>\r\n                </a> */}\r\n            </div>\r\n            <button onClick={handleClick} id=\"new-quote\">New Quotes</button>\r\n        </div>\r\n     </div>\r\n     </div>\r\n    );\r\n}\r\nexport default Quotes;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}